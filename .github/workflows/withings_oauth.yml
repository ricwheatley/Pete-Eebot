name: Withings OAuth Helper

on:
  workflow_dispatch:
    inputs:
      code:
        description: "Paste the ?code=... from your redirect page (leave blank to generate the auth URL)"
        required: false
        default: ""
      override_redirect:
        description: "Optional: override redirect URI (must exactly match the Withings app setting)"
        required: false
        default: ""

permissions:
  contents: read

jobs:
  oauth:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve secrets and inputs
        id: resolve
        shell: bash
        env:
          CLIENT_ID: ${{ secrets.WITHINGS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.WITHINGS_CLIENT_SECRET }}
          REDIRECT_URI: ${{ secrets.WITHINGS_REDIRECT_URI }}
          OVERRIDE_REDIRECT: ${{ github.event.inputs.override_redirect }}
        run: |
          set -euo pipefail

          if [ -z "${CLIENT_ID}" ] || [ -z "${CLIENT_SECRET}" ] || [ -z "${REDIRECT_URI}" ]; then
            echo "Missing secrets. Need WITHINGS_CLIENT_ID, WITHINGS_CLIENT_SECRET, WITHINGS_REDIRECT_URI" >&2
            exit 1
          fi

          # Use override if provided
          if [ -n "${OVERRIDE_REDIRECT}" ]; then
            REDIRECT_URI="${OVERRIDE_REDIRECT}"
          fi

          # Masked preview of client id
          CLIENT_ID_MASKED="${CLIENT_ID:0:12}…"

          # URL-encode redirect using a tiny Python one-liner (no heredoc)
          REDIRECT_URI_ENC="$(python3 -c "import urllib.parse,os; print(urllib.parse.quote(os.environ['REDIRECT_URI'], safe=''))")"

          {
            echo "client_id_masked=${CLIENT_ID_MASKED}"
            echo "redirect_uri_raw=${REDIRECT_URI}"
            echo "redirect_uri_enc=${REDIRECT_URI_ENC}"
          } >> "$GITHUB_OUTPUT"

      - name: Show Authorisation URL or Exchange Code
        shell: bash
        env:
          CLIENT_ID:         ${{ secrets.WITHINGS_CLIENT_ID }}
          CLIENT_SECRET:     ${{ secrets.WITHINGS_CLIENT_SECRET }}
          REDIRECT_URI_RAW:  ${{ steps.resolve.outputs.redirect_uri_raw }}
          REDIRECT_URI_ENC:  ${{ steps.resolve.outputs.redirect_uri_enc }}
          CLIENT_ID_MASKED:  ${{ steps.resolve.outputs.client_id_masked }}
          CODE:              ${{ github.event.inputs.code }}
        run: |
          set -euo pipefail

          SCOPE_ENC="user.metrics%20user.activity%20user.info"
          AUTH_URL="https://account.withings.com/oauth2_user/authorize2?response_type=code&client_id=${CLIENT_ID}&state=ric_state_123&scope=${SCOPE_ENC}&redirect_uri=${REDIRECT_URI_ENC}"

          if [ -z "${CODE}" ]; then
            {
              echo "## Withings Authorisation"
              echo ""
              echo "- Client ID: \`${CLIENT_ID_MASKED}\`"
              echo "- Redirect URI (exact): \`${REDIRECT_URI_RAW}\`"
              echo ""
              echo "Tap this link to authorise:"
              echo ""
              echo "<a href=\"${AUTH_URL}\">${AUTH_URL}</a>"
              echo ""
              echo "After approving, your redirect page shows a **code**."
              echo "Re-run this workflow and paste that code into the input."
              echo ""
              echo "> Any change to the redirect URI, including a trailing slash, must match in both Withings and here."
            } >> "$GITHUB_STEP_SUMMARY"
            exit 0
          fi

          echo "Exchanging code for tokens…"
          sudo apt-get update -y >/dev/null
          sudo apt-get install -y jq >/dev/null

          RESP="$(curl -sS -X POST "https://wbsapi.withings.net/v2/oauth2" \
            --data-urlencode "action=requesttoken" \
            --data-urlencode "grant_type=authorization_code" \
            --data-urlencode "client_id=${CLIENT_ID}" \
            --data-urlencode "client_secret=${CLIENT_SECRET}" \
            --data-urlencode "code=${CODE}" \
            --data-urlencode "redirect_uri=${REDIRECT_URI_RAW}")"

          STATUS="$(echo "$RESP" | jq -r '.status // empty')"
          if [ "$STATUS" != "0" ]; then
            {
              echo "## Exchange Failed"
              echo ""
              echo "- Redirect used: \`${REDIRECT_URI_RAW}\`"
              echo "- Common causes: redirect mismatch, reusing a code, code expired."
              echo ""
              echo "**Raw response:**"
              echo ""
              echo '```json'
              echo "$RESP"
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          REFRESH="$(echo "$RESP" | jq -r '.body.refresh_token')"
          ACCESS="$(echo "$RESP" | jq -r '.body.access_token')"
          EXPIRES="$(echo "$RESP" | jq -r '.body.expires_in')"

          {
            echo "## ✅ Success - Save Your Refresh Token"
            echo ""
            echo "**WITHINGS_REFRESH_TOKEN:**"
            echo ""
            echo '```'
            echo "${REFRESH}"
            echo '```'
            echo ""
            echo "Add it as a repository secret named **WITHINGS_REFRESH_TOKEN**."
            echo ""
            echo "Optional:"
            echo "- Access token preview: \`${ACCESS:0:12}...\` (expires in ${EXPIRES}s)"
          } >> "$GITHUB_STEP_SUMMARY"
