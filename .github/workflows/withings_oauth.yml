name: Withings OAuth Helper

on:
  workflow_dispatch:
    inputs:
      redirect_url:
        description: "Paste the FULL URL from the address bar after authorising (contains ?code=...)"
        required: false
        default: ""
      code:
        description: "Optional: paste just the code (ignored if redirect_url is provided)"
        required: false
        default: ""

permissions:
  contents: read

jobs:
  oauth:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve repo variables
        id: res
        run: |
          set -euo pipefail
          echo "client_id=${{ vars.WITHINGS_CLIENT_ID_FOR_URL }}" >> "$GITHUB_OUTPUT"
          echo "redirect_raw=${{ vars.WITHINGS_REDIRECT_URI_FOR_URL }}" >> "$GITHUB_OUTPUT"
          echo "client_secret=${{ vars.WITHINGS_CLIENT_SECRET_FOR_EXCHANGE }}" >> "$GITHUB_OUTPUT"

      - name: Authorise or Exchange
        run: |
          set -euo pipefail

          CLIENT_ID="${{ steps.res.outputs.client_id }}"
          REDIRECT_RAW="${{ steps.res.outputs.redirect_raw }}"
          CLIENT_SECRET="${{ steps.res.outputs.client_secret }}"
          REDIRECT_URL_RAW="${{ github.event.inputs.redirect_url }}"
          CODE_RAW_INPUT="${{ github.event.inputs.code }}"

          SCOPES="user.metrics,user.activity,user.info"
          AUTH_URL="https://account.withings.com/oauth2_user/authorize2?response_type=code&client_id=${CLIENT_ID}&scope=${SCOPES}&redirect_uri=${REDIRECT_RAW}"

          # If no code or redirect_url supplied, just show the link
          if [ -z "$REDIRECT_URL_RAW" ] && [ -z "$CODE_RAW_INPUT" ]; then
            {
              echo "## Withings Authorisation"
              echo
              echo "Authorise here, then rerun with the redirect_url:"
              echo
              echo "$AUTH_URL"
            } >> "$GITHUB_STEP_SUMMARY"
            exit 0
          fi

          # Extract code
          CODE=""
          if [ -n "$REDIRECT_URL_RAW" ]; then
            CODE="$(echo "$REDIRECT_URL_RAW" | sed -n 's/.*code=\\([^&]*\\).*/\\1/p')"
          fi
          if [ -z "$CODE" ]; then
            CODE="$CODE_RAW_INPUT"
          fi

          if [ -z "$CODE" ]; then
            echo "No code found" >&2
            exit 1
          fi

          echo "Exchanging code: $CODE"

          RESP="$(curl -sS -X POST "https://wbsapi.withings.net/v2/oauth2" \
            --data-urlencode "action=requesttoken" \
            --data-urlencode "grant_type=authorization_code" \
            --data-urlencode "client_id=${CLIENT_ID}" \
            --data-urlencode "client_secret=${CLIENT_SECRET}" \
            --data-urlencode "code=${CODE}" \
            --data-urlencode "redirect_uri=${REDIRECT_RAW}")"

          STATUS="$(echo "$RESP" | jq -r '.status // empty')"

          if [ "$STATUS" != "0" ]; then
            {
              echo "## Exchange Failed"
              echo
              echo "Response:"
              echo "$RESP"
            } >> "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          REFRESH="$(echo "$RESP" | jq -r '.body.refresh_token')"
          ACCESS="$(echo "$RESP" | jq -r '.body.access_token')"
          EXPIRES="$(echo "$RESP" | jq -r '.body.expires_in')"

          {
            echo "## Success - Save Your Refresh Token"
            echo
            echo "WITHINGS_REFRESH_TOKEN:"
            echo "$REFRESH"
            echo
            echo "Access token preview: ${ACCESS:0:12}... (expires in ${EXPIRES}s)"
          } >> "$GITHUB_STEP_SUMMARY"
